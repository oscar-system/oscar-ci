% $user = %x{id -nu}.chomp
% $group = %x{id -ng}.chomp
% $uid = Process.uid
% $gid = Process.gid
%
# See README.md for instructions for how to set up and run the docker image.

FROM ubuntu:18.04
# Basic development and admin tools
RUN apt-get update && apt-get install -y \
  autoconf \
  automake \
  cmake \
  curl \
  dnsutils \
  g++ \
  gcc \
  gdb \
  gfortran \
  git \
  host \
  jq \
  inetutils-ping \
  inetutils-traceroute \
  libboost-dev \
  libcdd-dev \
  libgmp-dev \
  libjson-perl \
  libmpfr-dev \
  libncurses-dev \
  libntl-dev \
  libpcre2-dev \
  libperl-dev \
  libreadline-dev \
  libsvg-perl \
  libterm-readkey-perl \
  libterm-readline-gnu-perl \
  libtool-bin \
  libxml-libxml-perl \
  libxml-libxslt-perl \
  libxml-writer-perl \
  libxml2-dev \
  libxslt1-dev \
  libzmq3-dev \
  locales \
  make \
  mercurial \
  ninja-build \
  openjdk-8-jdk \
  pandoc \
  perl \
  python-dev \
  python3-dev \
  python3-venv \
  python3-yaml \
  ruby-dev \
  screen \
  subversion \
  tmux \
  vim \
  wget \
  zsh
# Configure locale
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
  locale-gen
ENV LANG=en_US.UTF-8  LANGUAGE=en_US.UTF-8  LC_ALL=en_US.UTF-8   
# Create user and directories
RUN groupadd <%=$group%> -g <%=$uid%> && \
    useradd <%=$user%> --no-log-init -r -g <%=$group%> -u <%=$uid%> \
      -d /home/<%=$user%> -m -s /bin/bash && \
    mkdir -p /home/<%=$user%>
# Copy any rc files to /root and /home/$user for CLI use
COPY user/ /tmp/user/
RUN cp -a /tmp/user/. /root && \
    cp -a /tmp/user/. /home/<%=$user%> && \
    rm -rf /tmp/user && \
    chown -R <%=$user%>:<%=$group%> /home/<%=$user%>
# Transfer configuration information
RUN mkdir -p /config
ENV CREDENTIALS=/config/credentials.yaml
COPY credentials.yaml ${CREDENTIALS}
RUN chmod 644 ${CREDENTIALS}
# Run shell by default for container testing/development
CMD bash -l
